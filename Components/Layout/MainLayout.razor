@inherits LayoutComponentBase
@inject NavigationManager Navigation

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>

    <MudAppBar Elevation="1" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Secondary"
                       Edge="Edge.Start"
                       OnClick="@ToggleDrawer" />
        <MudSpacer />
        <MudSwitch @bind-Value="_isDarkMode"
                   Class="ma-4"
                   T="bool"
                   Label="@(_isDarkMode ? "Dark Mode" : "Light Mode")" />
    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerState" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Safeguarding App</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pt-16 px-16">

        @Body

        <!-- Progress Bar -->
        <footer class="progress-footer">
            <MudProgressLinear Value="@progress" Color="Color.Primary" Height="8px" Animated="true" />
        </footer>

    </MudMainContent>

</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private int progress = 0;
    private bool _drawerState = false;
    private bool _isDarkMode;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;
        UpdateProgress();
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        UpdateProgress();
        StateHasChanged(); // Ensure UI refresh
    }

    @*This is the progress bar method, change numbers depending on progress percentage and pages*@
    private void UpdateProgress()
    {
        string path = Navigation.Uri.Split('/').Last();
        progress = path switch
        {
            "" => 0, //Index page
            "page1" => 14, 
            "page2" => 28, 
            "page3" => 43, 
            "page4" => 57, 
            "page5" => 71, 
            "page6" => 86,
            "page7" => 86,
            "page8" => 71,
            "page9" => 86,
            "page10" => 100, //End page
            _ => progress
        };
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }

    private void ToggleDrawer()
    {
        _drawerState = !_drawerState;
    }

    MudTheme _theme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.BlueGray.Darken3,
            Secondary = Colors.Blue.Lighten4,
            AppbarBackground = Colors.BlueGray.Lighten5,
        },

        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Teal.Darken1,
            Secondary = Colors.Teal.Lighten5,
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
}
